AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: RAG Application Infrastructure
Parameters:
  KnowledgeBaseId:
    Type: String
    Default: SAZ2XA7OUY
    Description: ID of the existing Bedrock Knowledge Base
  AccountId:
    Type: String
    Description: AWS Account ID
  KnowledgeBaseBucket:
    Type: String
    Default: arn:aws:s3:::open-search-service
    Description: S3 bucket ARN for the knowledge base
  StackName:
    Type: String
    Description: Stack Name
Resources:
  CommonLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName:
        Fn::Sub: ${StackName}-common-layer
      Description: Common utilities and services for all Lambda functions
      ContentUri: s3://centexautotitle.net/rag/services/9d948d8c30916e1df3322bb3f0d51ed4
      CompatibleRuntimes:
      - nodejs20.x
      RetentionPolicy: Delete
    Metadata:
      SamResourceId: CommonLayer
  DependenciesLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName:
        Fn::Sub: ${StackName}-dependencies-layer
      Description: Dependencies layer for the Bedrock RAG project
      ContentUri: s3://centexautotitle.net/rag/services/c2284befb2d0dfb91ae53145dc1d0d60
      CompatibleRuntimes:
      - nodejs20.x
      RetentionPolicy: Delete
    Metadata:
      SamResourceId: DependenciesLayer
  CreateWebDataSourceLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${StackName}-create-web-data-source-lambda
      Runtime: nodejs18.x
      Handler: index.handler
      CodeUri: s3://centexautotitle.net/rag/services/af05647d1349da2ab3e7f37e5379779a
      Timeout: 60
      Role:
        Fn::Sub: arn:aws:iam::${AccountId}:role/lambda-admin-role
      Events:
        CustomResource:
          Type: Api
          Properties:
            Path: /create-data-source
            Method: post
            RestApiId:
              Ref: KnowledgeBaseAPI
      Policies:
      - Statement:
        - Effect: Allow
          Action:
          - bedrock:CreateDataSource
          - bedrock:UpdateDataSource
          - bedrock:DeleteDataSource
          Resource: '*'
    Metadata:
      SamResourceId: CreateWebDataSourceLambda
  CreateWebDataSourceLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${StackName}-create-web-data-source-lambda
      RetentionInDays: 7
    Metadata:
      SamResourceId: CreateWebDataSourceLambdaLogGroup
  IngestLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${StackName}-ingest-lambda
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: s3://centexautotitle.net/rag/services/903e65d09ab782bf5c04df14494541e6
      Timeout: 900
      Role:
        Fn::Sub: arn:aws:iam::${AccountId}:role/lambda-admin-role
      Environment:
        Variables:
          BUCKET_ARN:
            Ref: KnowledgeBaseBucket
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /ingest
            Method: post
            RestApiId:
              Ref: KnowledgeBaseAPI
    Metadata:
      SamResourceId: IngestLambda
  IngestLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${StackName}-ingest-lambda
      RetentionInDays: 7
    Metadata:
      SamResourceId: IngestLambdaLogGroup
  QueryLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${StackName}-query-lambda
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: s3://centexautotitle.net/rag/services/4e6b808960ff3ab6384f792670a79545
      Timeout: 29
      Role:
        Fn::Sub: arn:aws:iam::${AccountId}:role/lambda-admin-role
      Environment:
        Variables:
          ACCOUNT_ID:
            Ref: AccountId
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /docs
            Method: post
            RestApiId:
              Ref: KnowledgeBaseAPI
      Policies:
      - Statement:
        - Effect: Allow
          Action:
          - bedrock:RetrieveAndGenerate
          - bedrock:Retrieve
          - bedrock:InvokeModel
          - bedrock:GetInferenceProfile
          Resource: '*'
    Metadata:
      SamResourceId: QueryLambda
  QueryLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${StackName}-query-lambda
      RetentionInDays: 7
    Metadata:
      SamResourceId: QueryLambdaLogGroup
  ListDataSourcesLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${StackName}-list-data-sources-lambda
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: s3://centexautotitle.net/rag/services/6047208301d7b5fc07a26f805c07d425
      Timeout: 900
      Role:
        Fn::Sub: arn:aws:iam::${AccountId}:role/lambda-admin-role
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /data-sources
            Method: get
            RestApiId:
              Ref: KnowledgeBaseAPI
    Metadata:
      SamResourceId: ListDataSourcesLambda
  ListDataSourcesLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${StackName}-list-data-sources-lambda
      RetentionInDays: 7
    Metadata:
      SamResourceId: ListDataSourcesLambdaLogGroup
  CreateChatBotLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${StackName}-create-chat-bot-lambda
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: s3://centexautotitle.net/rag/services/23f978e7d517868bbb24ae546cdf2edf
      Timeout: 900
      Role:
        Fn::Sub: arn:aws:iam::${AccountId}:role/lambda-admin-role
      Layers:
      - Ref: CommonLayer
      - Ref: DependenciesLayer
      Environment:
        Variables:
          NODE_PATH: /opt/nodejs:/opt/nodejs/node_modules:/opt/common:/opt/dependencies
          CHATBOT_TABLE_NAME:
            Ref: ChatbotTable
          USER_TABLE_NAME:
            Ref: UserDetailsTable
          USER_CHATBOT_TABLE_NAME:
            Ref: UserChatBotTable
          KNOWLEDGE_BASE_ROLE_ARN: arn:aws:iam::905418372486:role/service-role/AmazonBedrockExecutionRoleForKnowledgeBase_9umgz
          EMBEDDING_MODEL_ARN: arn:aws:bedrock:us-east-1::foundation-model/amazon.titan-embed-text-v2:0
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /chatbot
            Method: post
            RestApiId:
              Ref: KnowledgeBaseAPI
    Metadata:
      SamResourceId: CreateChatBotLambda
  CreateChatBotLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${StackName}-create-chat-bot-lambda
      RetentionInDays: 7
    Metadata:
      SamResourceId: CreateChatBotLambdaLogGroup
  UserSignUpLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${StackName}-user-sign-up-lambda
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: s3://centexautotitle.net/rag/services/d1fca50976d1a79d1a4c0103079de4f3
      Timeout: 900
      Role:
        Fn::Sub: arn:aws:iam::${AccountId}:role/lambda-admin-role
      Layers:
      - Ref: CommonLayer
      - Ref: DependenciesLayer
      Environment:
        Variables:
          NODE_PATH: /opt/nodejs:/opt/nodejs/node_modules:/opt/common:/opt/dependencies
          USERS_TABLE_NAME:
            Ref: UserDetailsTable
          KNOWLEDGE_BASE_ROLE_ARN: arn:aws:iam::905418372486:role/service-role/AmazonBedrockExecutionRoleForKnowledgeBase_9umgz
          EMBEDDING_MODEL_ARN: arn:aws:bedrock:us-east-1::foundation-model/amazon.titan-embed-text-v2:0
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /user-sign-up
            Method: post
            RestApiId:
              Ref: KnowledgeBaseAPI
    Metadata:
      SamResourceId: UserSignUpLambda
  UserSignUpLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${StackName}-user-sign-up-lambda
      RetentionInDays: 7
    Metadata:
      SamResourceId: UserSignUpLambdaLogGroup
  GetAllChatBotsLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${StackName}-get-all-chatbots-lambda
      Runtime: nodejs20.x
      Handler: index.handler
      CodeUri: s3://centexautotitle.net/rag/services/618fc2e107c03ae366edc0e10657f66c
      Timeout: 900
      Role:
        Fn::Sub: arn:aws:iam::${AccountId}:role/lambda-admin-role
      Layers:
      - Ref: CommonLayer
      - Ref: DependenciesLayer
      Environment:
        Variables:
          NODE_PATH: /opt/nodejs:/opt/nodejs/node_modules:/opt/common:/opt/dependencies
          CHATBOT_TABLE_NAME:
            Ref: ChatbotTable
          USER_TABLE_NAME:
            Ref: UserDetailsTable
          USER_CHATBOT_TABLE_NAME:
            Ref: UserChatBotTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /chatbots
            Method: get
            RestApiId:
              Ref: KnowledgeBaseAPI
    Metadata:
      SamResourceId: GetAllChatBotsLambda
  GetAllChatBotsLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${StackName}-get-all-chatbots-lambda
      RetentionInDays: 7
    Metadata:
      SamResourceId: GetAllChatBotsLambdaLogGroup
  ChatbotTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Fn::Sub: ${StackName}-chatbot-table
      AttributeDefinitions:
      - AttributeName: chatBotId
        AttributeType: S
      KeySchema:
      - AttributeName: chatBotId
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
    Metadata:
      SamResourceId: ChatbotTable
  KnowledgeBaseTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Fn::Sub: ${StackName}-knowledge-base-table
      AttributeDefinitions:
      - AttributeName: knowledgeBaseId
        AttributeType: S
      - AttributeName: createdBy
        AttributeType: S
      KeySchema:
      - AttributeName: knowledgeBaseId
        KeyType: HASH
      - AttributeName: createdBy
        KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
    Metadata:
      SamResourceId: KnowledgeBaseTable
  UserDetailsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Fn::Sub: ${StackName}-user-details-table
      AttributeDefinitions:
      - AttributeName: userId
        AttributeType: S
      KeySchema:
      - AttributeName: userId
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 10
        WriteCapacityUnits: 10
    Metadata:
      SamResourceId: UserDetailsTable
  UserChatBotTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Fn::Sub: ${StackName}-user-chatbot-table
      AttributeDefinitions:
      - AttributeName: userId
        AttributeType: S
      - AttributeName: chatBotId
        AttributeType: S
      - AttributeName: createdBy
        AttributeType: S
      KeySchema:
      - AttributeName: userId
        KeyType: HASH
      - AttributeName: chatBotId
        KeyType: RANGE
      GlobalSecondaryIndexes:
      - IndexName: createdBy-index
        KeySchema:
        - AttributeName: createdBy
          KeyType: HASH
        Projection:
          ProjectionType: ALL
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 10
      ProvisionedThroughput:
        ReadCapacityUnits: 10
        WriteCapacityUnits: 10
    Metadata:
      SamResourceId: UserChatBotTable
  KnowledgeBaseAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      Name:
        Fn::Sub: ${StackName}-knowledgebase-api
      EndpointConfiguration:
        Type: REGIONAL
      Cors:
        AllowMethods: '''*'''
        AllowHeaders: '''*'''
        AllowOrigin: '''*'''
    Metadata:
      SamResourceId: KnowledgeBaseAPI
Outputs:
  ApiGatewayUrl:
    Description: API Gateway URL
    Value:
      Fn::Sub: https://${KnowledgeBaseAPI}.execute-api.${AWS::Region}.amazonaws.com/dev
